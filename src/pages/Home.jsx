import React, { useEffect, useState } from 'react';
import Card from '../components/Card';
import FormField from '../components/FormField';
import Loader from '../components/Loader';


const RenderCards = ({data , title})=>{
    if(data?.length > 0){
        return data.map(post => <Card key={post._id} {...post} />)
    }

    return <h2 className='mt-5 font-bold text-indigo-600 text-xl uppercase'>{title}</h2>
}

const Home = () => {

    const [loading , setLoading] = useState(false)
    const [allPosts , setAllPosts] = useState(null)
    const [searchText , setSearchText] = useState(null)
    const [searchTimeout, setSearchTimeout] = useState(null);
    const [searchedResults, setSearchedResults] = useState(null);

        const fetchingPosts = async()=>{
            setLoading(true)
            try {

                const response = await fetch('http://localhost:8080/api/v1/post',{
                    method : "GET",
                    headers :{
                        'Content-Type' : 'application/json'
                    },
                })

                if(response.ok){
                    const result = await response.json()
                    console.log(result);
                    setAllPosts(result.data.reverse())
                }
                
            } catch (error) {
                alert(error)
            }
            finally{
                setLoading(false)
            }
        }

        useEffect(()=>{
            fetchingPosts()
        } ,[])

        const handleSearchChange = (e) => {
            clearTimeout(searchTimeout);
            setSearchText(e.target.value);
            setSearchTimeout(
              setTimeout(() => {
                const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
                setSearchedResults(searchResult);
              }, 500),
            );
          };

    return (
        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-slate-800 text-3xl'>This Community Showcase</h1>
                <p className='mt-2 text-gray-500 text-base mx-w-[500px]'>Browse through a collection imaginative and visually stunning images generated by DALL-E AI</p>
            </div>
            <div className='mt-16'>
                <FormField
                labelName="Search posts"
                type="text"
                name="text"
                placeholder="Search something..."
                value={searchText}
                handleChange={handleSearchChange}
                />
            </div>

            <div className='mt-10'>
                {
                    loading ? <div className='flex justify-center items-center'>
                        <Loader/>
                    </div> : 
                    <>
                        {
                            searchText && (
                                <h2 className='font-medium text-gray-500-700 text-xl'>
                                    Showing result for : <span className='text-slate-600'>{searchText}</span>
                                </h2>
                            )
                        }

                        <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                        { searchText ? (
                                <RenderCards
                                data={searchedResults}
                                title="No search result found"
                                />
                            ) : (
                            <RenderCards 
                            data={allPosts}
                            title="No posts found"
                            />
    )
                        }
                        </div>
                    </>
                }

            </div>
        </section>
    );
};

export default Home;